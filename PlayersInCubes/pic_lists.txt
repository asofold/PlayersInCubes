PlayersInCubes - Lists
-----------------------------------------


LICENSE
------------------
"Minimal" for a Bukkit plugin.
(Probably to be updated!)


DESCRIPTION
-----------------------------------------

PlayersInCubes is a "simple" attempt to have players see each other or not, 
 based on their distance.
The distance of players to each other is estimated by associating players with
 all cube-partitions within a certain range of the player, and let players 
 see each other whenever both are associated with one or more identical cubes.
Even though there is a good bit of inaccuracy and variation for the distance, 
 players always both see each other or both can not see each other.
 
 IMPORTANT: 
 * This will most likely be incompatible with any sort of 
    vanish or disguise plugins.
 * All players are treated alike, exceptions are planned.


COMMANDS AND PERMISSIONS
-------------------------

Manage with /playersincubes ... (aliases: pic, pcubes)

* Reload the configuration:
    ... reload
    playersincubes.reload
* Show info about the configuration:
    ... info
    playersincubes.info
* Re check all players:
    ... cleanup
    playersincubes.cleanup
* Disable checking (will write back to config.yml):
    ... disable
    playersincubes.disable
* Enable (will write back to config.yml):
    ... enable
    playersincubes.enable
* View stats about cubes in use:
    ... stats
    playersincubes.stats.view
* Reset stats:
    ... stats reset
    playersincubes.stats.reset


Configuration
----------------------------------------
* enabled
    If checks are enabled at all. 
    Can be altered by commands (see commands section).
* ignore-worlds
    This is a list of worlds not to be included in checks,
     the world names must be accurate in letter case.
* cube.size
    The size of a cube.
* cube.distance
    A cube center must be within this distance from a player,
    to get associated.
* lazy.distance
    A player must move at least this far to force re-checking,
     this improves the performance clearly, at the cost of accuracy.
* lazy.lifetime
    Duration in seconds after wich a re-check of a player is forced,
     if the player moves, in any case. Set to 0 to not use this.
    This is probably unnecessary to set, but it will force accuracy,
     when players passed a cube border staying within lazy.distance.
* packets.enabled
    If to send player info packets to keep the player lists up to date,
     even for players that can not see each other.
    
The configuration can be reloaded at runtime (see commands section).

Implications: 
* cube.distance should always be greater than cube.size/2 to have directly
    neighboring cubes added, when the players stand right next to a border.  
    In fact the distance is chosen such that you will see the next cube when
     you are close but not too close to the border of the cube you are in,
     while you will only be in one cube, when you are in its center.
* Raising the distance for cubes will lead to a cubic (...) increase of the 
    number of cubes held per player, so there will be a limit.
* The maximal distance at which players might see each other,
    seems to be the sum of cube.size and cube.distance, the minimal distance
     at which players can not see each others will be the maximum of both.
    Still lazy.distance has to be counted in.
     

STRUCTURES
------------------
- World split in cubes of equal size.
- HashMap with one hash (3 dim).
- Cubes are associated with the player according to the distance of 
    their center to the player.
- Cubes keep Sets for players that can see the sector. 
    Any overlap for two players means they can see each other.
- Optimization (lazy): A position is kept for every player, 
    that will be reset upon moving far enough (or after timeout).
    If no reset of the position is necessary, 
    no changes will be done to associated cubes.
- Even ignored worlds hold a set of players that are in it.


POSSIBLE OPTIMIZATIONS
-------------------------------
- Use int/Integer ids for the players and use those internally. 
    [Use Minecraft ids - if ever mobs get done this will help...]
- More optimization is possible with remembering the cube a player is in, 
    though that might contradict distCube
- Cube lookup: Prevent object creation and some iterators and set creation, 
    lookup by hash directly (refactor to arrays + modulo?)
- Store some objects longer / permanently, to avoid creating them newly.


POSSIBLE FEATURES
------------------------------
- Ability to have single players see all at any distance.
- Ability to have single players see none.
- Ability to hide single players from everyone [with exceptions?].
- Ability to have certain players be seen by everyone on any distance.
- Ability to use PlayersInCubes not for hiding or showing players,
    but to know what a player can see.
- World specific "abilities":
    Different settings for different worlds, 
     ability to distinguish above abilities per world.
    (Also replaces ignore-worlds.)
- Exact hiding and showing feature: use cubes to reduce players to check vs. each other.
- Permanently loaded cubes with special properties 
    + API (turn on lights in town, exclude area from checks, 
            include for checks or the like ...).
- Cube specific lazy.distance 
    (a non pvp spawn region could use a bigger lazy dist for the center)
- Very distant: hide mobs too.


STACK
-----------------------------------

*** STATS
? Stats for some timings (Bukkit has such though)
? log y-level (interesting for choice of config parameters).

*** STRUCTURE AND EFFICIENCY AND CONSISTENCY
? make initial hashMap size configurable for some things (CubeServer/cubes)
? use only PicPlayer.playerName internally to switch to == somewhere (Do HashSet or String.equals check that first ?)
? refactor a bit for CubeServer.players ? more stuff from core to CubeServer ?
? euklidian distance for cubes: might be useful, if smaller cube sizes are used to get a more round impression [subject to performance testing].
? probably not : give allPlayers to cubeServer ? => more efficient renderBLind(world!), or renderBLind(pp, server, ignored)
change renderAllBlind etc to only check vs. the players in that world ? [but: ?consistency trouble]
!More efficient hiding etc, avoid hide+show: check against the set of players of the cube a player is inside of (== for cubes?).


*** VISIBILITY
* access points: renderSeen renderBlind checkOut removeAllPlayers => PicPlayer invisible and see-all flags realistic.
!must: multi world support to not intermingle with other visibility changing plugins for certain worlds or players in any worlds.
? consider generic ways of who can see whom based on tags or so. -> unlikely 
? PicPlayer: add invisibility ? (but do respect who can be seen)
? PicPlayer: add a way to see all others always (unless really vanished). -> must have: permission ?

*** IGNORE WORLDS
? check: Make ignored worlds "untouched", i.e. only adjust things for players that move from / to / in checked worlds.
!(adjust) Check for ignored worlds on checkouts (compatibility).

*** API
? Add minimum API: canPlayerSee(world, x, y, z) canPlayerSeePlayer(p1, p2), isWorldIgnore getPlayersInWorld and the like.


*** DOC
!explain names of stats entries, and maybe how to interpret
!explain how to adjust the settings without wrecking it.
! add version to info.


*** ISSUES
? Check: surprisingly many cubes get removed from players on checking. <- not really a surprise
!CHECK: A much higher (context dependent) lazydist could be ok, depending on other settings. <- not sure :)
! potential bug: checkout renders blind always! so check: what worlds are players in, are they ignored etc.



VERSION HISTORY
----------------------------------

(2.1.1)
- (bugfix) Send packets to all players if a player quits.
- (change) Configuration path for send-packets: packets.enabled

(2.1.0)
- (add) Send fake packets to make players names show up in the list, though hidden.

(2.0.0)
- (CHANGE) Packet naming.

(1.2.1)
- (bugfix) npe.

(1.2.0)
- (add) Version to info message.
- (bugfix) Potentially fixed treatment of (ignored) worlds.
- (adjust) Some internal tweaks/cleanups.

(1.1.1)
- (bugfix) Save settings if enable or disable is used + correct messages and behavior.
- (adjust) Try to create folders and an empty file, if not existent.
- (bugfix) Stats keys for worlds in CubeServer.
- (update) Stats: final rage
- (add) Stats: Removed cubes for players.
- (adjust) Names of stats entries.

(1.1.0)
- (add) Option to ignore worlds.

(1.0.0) *** Initial version.




